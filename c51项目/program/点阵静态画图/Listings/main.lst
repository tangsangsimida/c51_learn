C51 COMPILER V9.54   MAIN                                                                  11/09/2022 12:28:12 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\hex\main.obj
COMPILER INVOKED BY: D:\software\keil5\C51\BIN\C51.EXE Objects\code\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\lib\tan
                    -gsanglib) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\hex\main.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "c51tangsang.h"
   3          #include <string.h>
   4          sbit RCK  = P3^5;  //RCLK
   5          sbit SRCK = P3^6;  //时钟 SRCLK
   6          sbit SER  = P3^4;  //串行数据 SER
   7          
   8          unsigned char clum[]={0xF8,0x49,0x5E,0x48,0x48,0x5E,0x49,0xF8,}; //显示图像的数据,静态显示图像
   9          
  10          
  11          
  12          //写入数据
  13          void show_clum(unsigned char,unsigned char);
  14          static void write_byte(unsigned char);
  15          //此处阳极给1选中，行为共阳连接.
  16          static void write_byte(unsigned char byte)
  17          {
  18   1        unsigned char i;
  19   1        //把数据放进寄存器，寄存器为不可位操作寄存器利用& |压栈式赋值
  20   1        for(i=0;i<8;i++)
  21   1        {
  22   2          //把最高位取出来
  23   2          SER =byte>>7;
  24   2          byte<<=1;
  25   2          //时钟和rck该复习了
  26   2          SRCK =0;
  27   2          SRCK =1;
  28   2        }
  29   1        //需要一个上升沿才能传入数据
  30   1        RCK =1;
  31   1        //传入数据后让io保持低电平，为下一次传入数据做准备(下一次上升沿)
  32   1        RCK =0;
  33   1      }
  34          void show_clum(unsigned char clum,unsigned char Data)
  35          {
  36   1        write_byte(Data);
  37   1        P0=~(0x80>>(clum-1));
  38   1        //列为共阴极给0选中
  39   1      }
  40          void main()
  41          { 
  42   1        unsigned char cl;
  43   1        //上电之后单片机的所有io都是高电平
  44   1        SER = 0;
  45   1        RCK = 0;
  46   1      
  47   1      
  48   1        while(1)
  49   1        {
  50   2          for(cl=1;cl<=8;cl++)
  51   2          {
  52   3            show_clum(cl,clum[cl-1]);
  53   3          }
  54   2        }
C51 COMPILER V9.54   MAIN                                                                  11/09/2022 12:28:12 PAGE 2   

  55   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     80    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
